apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.mCompileSdkVersion
    defaultConfig {
        applicationId "com.jc.gradle"
        minSdkVersion rootProject.ext.android.mMinSdkVersion
        targetSdkVersion rootProject.ext.android.mTargetSdkVersion
        versionCode rootProject.ext.android.mVersionCode
        versionName rootProject.ext.android.mVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
//
///*配置开始之前执行*/
//this.beforeEvaluate {
//    println("配置开始之前执行")
//
//}
///**配置完成之后执行*/
//this.afterEvaluate {
//    println("配置完成之后执行")
//}
///**gradle执行完成后回调*/
//this.gradle.buildFinished {
//    println("gradle执行完成后回调")
//}

//task helloTask(group: "learn") {
//    doFirst {
//        this.getAllprojects().forEach {
//
//            println("-------${it.name}")
//        }
//    }
//}


//        编译时长
//def startBuildTime, endBuildTime
//this.afterEvaluate {
//    def preTask = project.tasks.getByName("preBuild")
//    preTask.doFirst {
//        startBuildTime = System.currentTimeMillis()
//        println("----------------------开始build:${startBuildTime}")
//
//    }
//
//    def mBuildTask = project.tasks.getByName("build")
//    mBuildTask.doLast {
//        endBuildTime = System.currentTimeMillis()
//        println("-----------------------Build耗费时长：${endBuildTime - startBuildTime}")
//    }
//}
//        编译时长

//        task 依赖

//        task 依赖


